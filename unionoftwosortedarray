import java.util.*;

public class Solution {
    public static List<Integer> unionOfSortedArrays(int[] a, int[] b) {
        List<Integer> union = new ArrayList<>();
        int i = 0, j = 0;

        // Traverse both arrays
        while (i < a.length && j < b.length) {
            // Skip duplicates in a
            if (i > 0 && a[i] == a[i - 1]) {
                i++;
                continue;
            }

            // Skip duplicates in b
            if (j > 0 && b[j] == b[j - 1]) {
                j++;
                continue;
            }

            if (a[i] < b[j]) {
                union.add(a[i]);
                i++;
            } else if (a[i] > b[j]) {
                union.add(b[j]);
                j++;
            } else {
                // Add either a[i] or b[j] (they are equal)
                union.add(a[i]);
                i++;
                j++;
            }
        }

        // Add remaining elements of a[]
        while (i < a.length) {
            if (i == 0 || a[i] != a[i - 1]) { // Skip duplicates
                union.add(a[i]);
            }
            i++;
        }

        // Add remaining elements of b[]
        while (j < b.length) {
            if (j == 0 || b[j] != b[j - 1]) { // Skip duplicates
                union.add(b[j]);
            }
            j++;
        }

        return union;
    }

    public static void main(String[] args) {
        int[] a = {1, 2, 2, 3, 4};
        int[] b = {2, 2, 3, 5, 6};
        System.out.println(unionOfSortedArrays(a, b)); // Output: [1, 2, 3, 4, 5, 6]
    }
}
